#!/usr/bin/env node
/*! @license Â©2014 Ruben Verborgh - Multimedia Lab / iMinds / Ghent University */

var fragmentUrl = 'http://data.linkeddatafragments.org/dbpedia{?subject,predicate,object}';

var FragmentsClient = require('../../lib/http/FragmentsClient'),
    UriTemplate = require('uritemplate'),
    Iterator = require('../../lib/iterators/Iterator'),
    GraphPatternIterator = require('../../lib/iterators/GraphPatternIterator'),
    rdf = require('../../lib/util/RdfUtil');

var client = new FragmentsClient(UriTemplate.parse(fragmentUrl)),
    iteratorOptions = { fragmentsClient: client, bufferSize: 8 };

var p_type_artist = rdf.triple('?p', rdf.RDF_TYPE, rdf.DBPEDIAOWL + 'Artist'),
    p_birthPlace_c = rdf.triple('?p', rdf.DBPEDIAOWL + 'birthPlace', '?c'),
    c_name_York = rdf.triple('?c', rdf.FOAF + 'name', '"York"@en');
var query = [p_type_artist, p_birthPlace_c, c_name_York];

var iterator = Iterator.single({});
iterator = new GraphPatternIterator(iterator, query, iteratorOptions);
iterator.on('data', function (bindings) { console.log(JSON.stringify(bindings)); });
iterator.on('error', console.error);
